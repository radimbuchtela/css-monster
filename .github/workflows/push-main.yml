# Deploying static content to GitHub Pages when push to main branch
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  ga_node_version: 22

jobs:
  bump-version:
    runs-on: ubuntu-latest
    outputs:
      new-version: ${{ steps.bump.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js with version ${{ env.ga_node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.ga_node_version }}

      - name: Bump Package Version
        id: bump
        run: |
          CURRENT_VERSION=$(npm pkg get version | tr -d '"')
          echo "Current version: $CURRENT_VERSION"

          npm version patch --no-git-tag-version

          NEW_VERSION=$(npm pkg get version | tr -d '"')
          echo "New version: $NEW_VERSION"
          echo "version=${NEW_VERSION}" >> $GITHUB_ENV
          echo "version=${NEW_VERSION}" >> $GITHUB_OUTPUT

      - name: Commit new version, create Git tag and push changes and tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Bump version to ${{ env.version }}"
          git tag "v${{ env.version }}"
          git push --no-verify origin ${{ github.ref_name }} --tags

  # Deploy app
  deploy-to-pages:
    needs: bump-version
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Replace `{{app-version}}` in HTML File
        run: |
          HTML_FILE_PATH="./src/index.html"
          NEW_VERSION="${{ needs.bump-version.outputs.new-version }}"
          VERSION_PLACEHOLDER="{{app-version}}"

          if [ ! -f "$HTML_FILE_PATH" ]; then
            echo "Error: $HTML_FILE_PATH is missing!" >&2
            exit 1
          fi

          if [ -z "$NEW_VERSION" ]; then
            echo "Error: NEW_VERSION is not set or empty!" >&2
            exit 1
          fi

          if ! grep -q "$VERSION_PLACEHOLDER" "$HTML_FILE_PATH"; then
            echo "Error: placeholder '$VERSION_PLACEHOLDER' is missing in $HTML_FILE_PATH"
            exit 1
          fi

          sed -i "" "s/$VERSION_PLACEHOLDER/$NEW_VERSION/g" "$HTML_FILE_PATH"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload folder with static pages
          path: './src/'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
